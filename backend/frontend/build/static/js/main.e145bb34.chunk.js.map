{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","setItem","stringify","response","detail","message","Header","useSelector","useDispatch","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","console","log","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","val","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","setState","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","varinat","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e145bb34.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\n\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\n\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\"","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { \n  productListReducer,\n  productDetailsReducer, \n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { \n  userLoginReducer, \n  userRegisterReducer, \n  userDetailsReducer, \n  userUpdateProfileReducer, \n  userListReducer, \n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport { \n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  // Cart\n  productList: productListReducer, // Adding a reducer in here triggers state\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n\n  cart: cartReducer,\n  // User\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  // Order\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\n// Pull the items we sent to localStorage (cartActions.js) to add to state\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []   // If items exist grab and parse them, or if items don't exist empty array\n\n// Pull the items we sent to localStorage (userActions.js) to add to state\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null   // If user exist grab and parse them, or if the user don't exist set to null\n\n// Pull the items we sent to localStorage (userActions.js) to add to state\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}   // If shippingAddress exist grab and parse them, or if the addresss don't exist set to empty\n\n\n// Adding to our state\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage, \n  shippingAddress: shippingAddressFromStorage,    // Placed in cart because it was created in cart reducers\n  },\n  userLogin: {userInfo: userInfoFromStorage},\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n","// Reducer is a function that takes in the current state, and will take in an action of what we want to do to the state\n// take in state and create an action that will return a new copy into the store\n\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  \n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }; // While loading product array is still empty\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        page: action.payload.page,\n        pages: action.payload.pages,\n      }; // When finished loading, products is whatever data action was able to find, passing from backend, products, page, and pages\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n      \n    default:\n      return state;             // If none of the above happen return back original state\n  }\n};\n\n\nexport const productDetailsReducer = (state = { product: { reviews:[] } }, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }; // While loading product array spread state\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }; // When finished loading, product is whatever data action was able to find\n\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\nexport const productDeleteReducer = ( state = { }, action ) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }; // While loading product array spread state\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }; \n\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }; // While loading product array spread state\n\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };  // send product that was created\n\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case PRODUCT_CREATE_RESET:\n      return { }\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }; // While loading product array spread state\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }; // send product that was created\n\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n\nexport const productReviewCreateReducer = (state = { }, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }; \n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true, };\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return { product: {} };\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  // state is an empty array of products\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload, };\n\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};","import { CART_ADD_ITEM,\n        CART_REMOVE_ITEM,\n        CART_SAVE_SHIPPING_ADDRESS,\n\n        CART_SAVE_PAYMENT_METHOD,\n\n        CART_CLEAR_ITEMS,\n    } from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state= { cartItems: [], shippingAddress: {} }, action) => {\n    switch(action.type){\n        case CART_ADD_ITEM:\n            // Check if product exists, if it does just add qty, if it doesn't add both item and qty\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)  // Check if the item already exists, for action x.product and item.product are used as the id\n\n            if(existItem){\n                return{\n                ...state,\n                cartItems: state.cartItems.map(x =>         // if product matches existItem replace it with new item, if it doesn't return x(original product)\n                    x.product === existItem.product ? item : x\n                    )\n                }\n                \n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item]    // Returns original state and cartItems, then adds new item\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return{\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)        // product = id,  everything that doesn't match id will not be deleted,    will display new array using actions\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return{\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state, \n                cartItems: []\n            }\n\n        default: \n            return state\n    }\n}\n\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants\";\n\n// USER LOGIN \nexport const userLoginReducer = (state = { }, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }; \n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }; // When finished loading, userInfo is whatever data action was able to find\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case USER_LOGOUT:\n        return {}       // Return empty state\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n// USER REGISTER \nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }; // When finished loading, userInfo is whatever data action was able to find\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case USER_LOGOUT:\n      return {}; // Return empty state\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n// USER PROFILE    \nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {...state, loading: true };\n\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }; // When finished loading, userInfo is whatever data action was able to find\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n      case USER_DETAILS_RESET:    // Clears out profile data when logged out\n        return { user: {} }\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n// USER UPDATE    \nexport const userUpdateProfileReducer = (state = { }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }; // success true with give a message that profile updated\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case USER_UPDATE_PROFILE_RESET:   // resets state\n      return {}\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n\n// USER LIST ADMIN   \nexport const userListReducer = (state = {users: []}, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }; \n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case USER_LIST_RESET:   // resets state\n      return {users: []}\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n\n// DELETE USER FROM DB AS ADMIN\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }; // success message if it works \n\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};\n\n\n// UPDATE USER FROM DB AS ADMIN\nexport const userUpdateReducer = (state = {user:{}}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }; // success message if it works\n\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }; // when finished if nothing was found give an error\n\n    case USER_UPDATE_RESET:\n      return { user: {} }   // reset user state\n\n    default:\n      return state; // If none of the above happen return back original state\n  }\n};","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state={}, action) => {\n    switch (action.type) {\n      case ORDER_CREATE_REQUEST:\n        return {\n          loading: true,\n        }\n\n      case ORDER_CREATE_SUCCESS:\n        return {\n          loading: false,\n          success: true,\n          order: action.payload,\n        }\n\n      case ORDER_CREATE_FAIL:\n        return {\n          loading: false,\n          error: action.payload,\n        }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems:[], shippingAddress:{} }, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\nexport const orderPayReducer = (\n  state = { },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_PAY_RESET:\n      return { };\n\n    default:\n      return state;\n  }\n};\n\n// Update orders in state by user\nexport const orderListMyReducer = (state = {orders: []}, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_LIST_MY_RESET:\n      return {\n        orders: []\n      }    // send back empty array of orders when logging out, being used inside of userActions.js\n\n    default:\n      return state;\n  }\n};\n\n\n// GRAB ORDERS AS ADMIN\nexport const orderListReducer = (state = {orders: []}, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_DELIVER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()  // Gives access to history prop\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword){\n            history.push(`/?keyword=${keyword}&page=1`)    // set keyword to keyword, and page # for pagination (auto set to 1)\n        }else{\n            history.push(history.push(history.location.pathname))   // If search bar is empty send to current page\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type=\"text\"\n                name=\"q\"\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            <Button \n                type='submit'\n                variant=\"outline-success\"\n                className='p-2'\n            >\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  \n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n// USER LOGIIN\n// we are going to take email and password,   \nexport const login = (email, password) => async (dispatch) => {\n    try{\n        // set USER_LOGIN_REQUEST,\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'content-type' : 'application/json'\n            }\n        }\n\n        // make the post request,\n        const { data } = await axios.post(      // Want to destructure data right away\n          \"/api/users/login/\",\n          { 'username': email, 'password': password },\n          config\n        );      \n\n        // and if it is successful dispatch payload to the reducer\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        // Set in state and localStorage, (store.js)\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n            error.response && error.response.data.detail // If we received an error message\n                ? error.response.data.detail // Give the error message, from detail which is from the backend\n                : error.message, // If not display generic message\n        });\n    }\n}\n\n\n\n\n// USER LOGOUT\n// In reducer we have USER_LOGOUT SET TO AN EMPTY OBJECT SO THE STATE WILL ALSO BE CLEARED\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')     // Remove item from localStorage so we can logout\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\n// USER REGISTER\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    // set USER_REGISTER_REQUEST,\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    // make the post request,\n    const { data } = await axios.post(\n      // Want to destructure data right away\n      \"/api/users/register/\",\n      { 'name': name, 'email': email, 'password': password },   // Change username to email, because email is our username\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n      // If register is successful we want to login immediately\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n\n    // Set in state and localStorage, (store.js)\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// USER PROFILE\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    // set USER_DETAILS_REQUEST,\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },    //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState()\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the get request,\n    const { data } = await axios.get(\n      // Want to destructure data right away\n      `/api/users/${id}/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n\n    // Set in state and localStorage, (store.js)\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// USER UPDATE\nexport const updateUserProfile = ( user ) => async (dispatch, getState) => {    // Take in user object that will gather the data and send the data to update profile\n  try {\n    // set USER_UPDATE_PROFILE_REQUEST,\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },    //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState()\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.put(\n      // Want to destructure data right away\n      `/api/users/profile/update/`,\n      user,     // Added the user parameter from the top\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    // After dipatching the update information we want to login again with the new information\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    // Update state and localStorge with the new userInfo\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    // Set in state and localStorage, (store.js)\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// ADMIN LIST USERS\nexport const listUsers = ( ) => async (dispatch, getState) => {    // Take in user object that will gather the data and send the data to update profile\n  try {\n    // set USER_UPDATE_PROFILE_REQUEST,\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },    //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState()\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.get(\n      // Want to destructure data right away\n      `/api/users/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// DELETE USER IN THE DB AS ADMIN\nexport const deleteUser = (id) => async (dispatch, getState) => {    // Take in ID to get specific user\n  try {\n    // set USER_DELETE_REQUEST,\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.delete(\n      // Want to destructure data right away\n      `/api/users/delete/${id}/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// UPDATE USER IN THE DB AS ADMIN\nexport const updateUser = (user) => async (dispatch, getState) => {    // Take in user to get specific user\n  try {\n    // set USER_UPDATE_REQUEST,\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.put(\n      // Want to destructure data right away\n      `/api/users/update/${user._id}/`,\n      user,   // user(formdata) sends to the user object that was passed in the top\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,   // When the update is complete reload and show new details for the user\n      payload: data\n    });\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\n","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./Header.css\";\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n  const userLogin = useSelector(state => state.userLogin) // Grab userLogin from state\n  const { userInfo } = userLogin  // destructure what we got out of the store \n\n  const dispatch = useDispatch()\n\n  const logoutHandler = () => {\n    //console.log('Logout')\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar\n        className=\"color-nav\"\n        /* bg=\"dark\" */ variant=\"dark\"\n        expand=\"lg\"\n        collapseOnSelect\n      >\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ElectroShop</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {/* If user is signed in and they are admin, add another dropdown list */}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"Adminmenu\">\n                  <LinkContainer to=\"/admin/userList\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderList\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n\n                  \n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        // Spanning review stars\n      <div className=\"rating\">\n        <span>\n          <i\n            style={{ color }}\n            className={\n              value >= 1\n                ? \"fas fa-star\"\n                : value >= 0.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n        <span>\n          <i\n            style={{ color }}\n            className={\n              value >= 2\n                ? \"fas fa-star\"\n                : value >= 1.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n        <span>\n          <i\n            style={{ color }}\n            className={\n              value >= 3\n                ? \"fas fa-star\"\n                : value >= 2.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n        <span>\n          <i\n            style={{ color }}\n            className={\n              value >= 4\n                ? \"fas fa-star\"\n                : value >= 3.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n        <span>\n          <i\n            style={{ color }}\n            className={\n              value >= 5\n                ? \"fas fa-star\"\n                : value >= 4.5\n                ? \"fas fa-star-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n            {/* Num reviews if there is text add if not don't */}\n        <span>{ text && text }</span>\n\n      </div>\n    );\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {     // Destructure so we don't need to use props\n    return (\n      <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/product/${product._id}`}>\n          <Card.Img src={product.image} />\n        </Link>\n\n        <Card.Body>\n          <Link to={`/product/${product._id}`}>\n            <Card.Title as=\"div\" >\n                <strong>{product.name}</strong>\n            </Card.Title>\n          </Link>\n\n          <Card.Text as=\"div\" >\n            <div className=\"my3\">\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"} />\n            </div>\n          </Card.Text>\n\n          <Card.Text as=\"h3\" >\n            ${product.price}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (             // https://react-bootstrap.github.io/components/spinners/\n      <Spinner\n        animation=\"border\"\n        role=\"status\"\n        style={{\n          height: \"100px\",\n          width: \"100px\",\n          margin: \"auto\",\n          display: \"block\",\n        }}\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap' \n\nfunction Message({ variant, children }) {       // Can be used to set different error messages in other files just by using Ex: <Message variant=\"\">{error}</Message>\n  return ( \n  <Alert variant={variant}>\n      {children}\n  </Alert>\n)}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction Paginate({ pages, page, keyword='', isAdmin=false }) {     // Add isAdmin for admin products screen\n\n    if(keyword){\n        keyword = keyword.split('?keyword=')[1].split('&')[0]       // Split out the keyword so you can search multiple pages\n    }\n\n    console.log('KEYWORD', keyword)\n\n    return (\n      pages > 1 && (\n        <Pagination>\n          {[...Array(pages).keys()].map((x) => (\n            <LinkContainer\n              key={x + 1}\n              to={\n                !isAdmin        // If not admin return regular page, if isadmin return admin products\n                  ? `/?keyword=${keyword}&page=${x + 1}`\n                  : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n              } // keyword if we searched using keyword, pages x + 1 so we start at one and move by one\n            >\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n            </LinkContainer>\n          ))}\n        </Pagination>\n      )\n    );\n}\n\nexport default Paginate\n","import axios from 'axios'\n\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\n// Instead of making Products API call from HomeScreen we will do it in this file\n\n// GET PRODUCTS (HomeScreen.js)   keyword for SearchBox\nexport const listProducts = (keyword = '') => async (dispatch) => {    // dispatch action to reducers, then update state\n    try{\n      dispatch({ type: PRODUCT_LIST_REQUEST })\n\n      // MAKE API CALL\n      const { data } = await axios.get(`/api/products${keyword}`)     // GRAB AND DESTRUCTURE DATA, if using SearchBox append keyword to the end\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data       // data we return from the API call\n      })\n        \n\n    } catch(error){\n        dispatch({\n          type: PRODUCT_LIST_FAIL,\n          payload: error.response && error.response.data.detail    // If we received an error message\n          ? error.response.data.detail     // Give the error message, from detail which is from the backend\n          : error.message,                  // If not display generic message\n        })\n\n    }\n}\n\n\n// GET PRODUCT BY ID    (ProductScreen.js)\nexport const listProductDetails = (id) => async (dispatch) => {\n  // dispatch action to reducers, then update state\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    // MAKE API CALL\n    const { data } = await axios.get(`/api/products/${id}`); // GRAB AND DESTRUCTURE DATA\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data, // data we return from the API call\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n// DELETE PRODUCT FROM DB AS ADMIN\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the delete request,\n    const { data } = await axios.delete(\n      // Want to destructure data right away\n      `/api/products/delete/${id}/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\n// CREATE PRODUCT FROM DB AS ADMIN\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the post request,\n    const { data } = await axios.post(\n      // Want to destructure data right away\n      `/api/products/create/`,\n      {},     // Send an empty object to create in backend\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// UPDATE PRODUCT FROM DB AS ADMIN\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the post request,\n    const { data } = await axios.put(\n      // Want to destructure data right away\n      `/api/products/update/${product._id}/`,\n      product,     // Send an product to backend\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n    // update product details after success\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS, \n      payload:data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\n// CREATE PRODUCT REVIEW\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the post request,\n    const { data } = await axios.post(\n      // Want to destructure data right away\n      `/api/products/${productId}/reviews/`,\n      review,     // Send review to backend\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      payload: data,\n    });\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n// GET TOP PRODUCST\nexport const listTopProducts = () => async (dispatch) => {    // dispatch action to reducers, then update state\n    try{\n      dispatch({ type: PRODUCT_TOP_REQUEST })\n\n      // MAKE API CALL\n      const { data } = await axios.get(`/api/products/top/`)     // GRAB AND DESTRUCTURE DATA, if using SearchBox append keyword to the end\n\n      dispatch({\n        type: PRODUCT_TOP_SUCCESS,\n        payload: data       // data we return from the API call\n      })\n        \n\n    } catch(error){\n        dispatch({\n          type: PRODUCT_TOP_FAIL,\n          payload: error.response && error.response.data.detail    // If we received an error message\n          ? error.response.data.detail     // Give the error message, from detail which is from the backend\n          : error.message,                  // If not display generic message\n        })\n\n    }\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nfunction ProductCarousel() {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { error, loading, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel.caption\">\n              <h4>\n                {product.name} (${product.price})\n              </h4>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n}\n\nexport default ProductCarousel;\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { useDispatch, useSelector } from 'react-redux'      // useSelector allows you to use certain parts of your state\nimport { listProducts } from '../actions/productActions'\n\nfunction HomeScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList;  // Destructure the productList which is found by going to store first, then follow into productReducers\n \n    let keyword = history.location.search // Add keyword to useEffect to refresh screen when called\n    //console.log(keyword)\n    useEffect(() => {\n        dispatch(listProducts(keyword));\n        \n    }, [dispatch, keyword])\n\n\n    return (\n      <div>\n        {/* If we are not searching display carousel */}\n        {!keyword && <ProductCarousel />}\n        <h1>Latest Products</h1>\n\n        {loading ? ( // If loading render loading, if error display reducer error msg, if finished render products\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <div>\n            <Row>\n              {products.map((product) => (\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            <Paginate page={page} pages={pages} keyword={keyword} />\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default HomeScreen\n\n\n\n\n\n// USED INSIDE OF USE EFFECT TO PULL PRODUCTS FROM BACKEND BEFORE ADDING REDUX STORE,\n\n//const [products, setProducts] = useState([]);\n\n// async function fetchProducts() {\n//     // instead of .then(promise) we will use async(promise) await promise\n//     const { data } = await axios.get(\n//     // GRAB AND DESTRUCTURE DATA\n//     \"/api/products/\" // Load without using http://127.0.0.1:8000 go into package.json and add below name: \"proxy\": \"http://127.0.0.1:8000\",\n//     );\n//     setProducts(data); // Set data\n// }\n\n// fetchProducts();\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {     // Pass in match so we don't have to pass in props\n\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate);\n    const { loading: loadingProductReview, error: errorProductReview, success: successProductReview } = productReviewCreate;\n\n  useEffect(() => {     // Explanation of this function in HomeScreen\n    if(successProductReview){   // If review was successful reset the reviews\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n\n    dispatch(listProductDetails(match.params.id))   // Getting id from productActions now\n\n  }, [dispatch, match, successProductReview])\n\n  \n  const addToCartHandler = () => {\n    //console.log('Button Clicked', match.params.id)\n    history.push(`/cart/${match.params.id} ? qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(     // match id, and send rating and comment to the backend using id\n      match.params.id, {\n        rating,\n        comment\n      }\n    ))\n  }\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                {\" \"}\n                {/* flush takes away border */}\n                {/* Product Name */}\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                {/* Rating */}\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n                {/* Price */}\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                {/* Description */}\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  {/* Price */}\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {/* In Stock Status */}\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs=\"auto\" className=\"my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            val={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map((\n                              x // Created an array of how many products we have in stock\n                            ) => (\n                              <option key={x + 1} value={x + 1}>\n                                {\" \"}\n                                {/* After mapping through we add a buyable stock for every stock we have in the db */}\n                                {x + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  {/* Button for Add to Cart */}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      disabled={product.countInStock === 0}\n                      type=\"button\"\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n              {/* Display Reviews */}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} color=\"#f8e825\" />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                {/* Create Reviews */}\n                  <ListGroup.Item>\n                    <h4>Write a Review</h4>\n\n                    {loadingProductReview && <Loader />}\n                    {successProductReview && <Message variant=\"succeess\">Review Submitted</Message>}\n                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n\n                    {userInfo ? (\n                      <Form onSubmit={submitHandler}>\n                        <Form.Group controlId=\"rating\">\n                          <Form.Label>Rating</Form.Label>\n                          <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                          >\n                            <option value=\"\">Select...</option>\n                            <option value=\"1\">1 - Poor</option>\n                            <option value=\"2\">2 - Fair</option>\n                            <option value=\"3\">3 - Good</option>\n                            <option value=\"4\">4 - Very Good</option>\n                            <option value=\"5\">5 - Excellent</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"comment\">\n                          <Form.Label>Review</Form.Label>\n                          <Form.Control\n                            as=\"textarea\"\n                            row='5'\n                            value={comment}\n                            onChange={(e) => setComment(e.target.value)}\n                          >\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Button \n                          disabled={loadingProductReview}\n                          type=\"submit\"\n                          variant=\"primary\"\n                        >\n                          Submit\n                        </Button>\n\n                      </Form>\n                    ) : (\n                      <Message variant=\"info\">Please <Link to=\"/login\">login</Link> to write a review</Message>\n                    )}\n                  </ListGroup.Item>\n\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen\n\n\n\n\n// Used with products.js while developing frontend\n// const product = products.find((p) => p._id === match.params.id); // P finds and matches id then pulls the parameters of the id from products array","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\n\n// ADD ITEM TO CART\nexport const addToCart = (id, qty) => async (dispatch, getState) => {       // function inside of function made it async, getState let's us get any part of the state\n    // Grab the data of the item we selected by it's id\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {                      // We can grab all of these items from the data we grabbed\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    // use to keep info saved \n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))        // Grabbing cart from store.js, cart also has cartItems\n}\n\n// Remove item from cart\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,    // when this is dispatch item with matching id will be removed\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))        // This action is used in cartScreen\n}\n\n\n\n// SAVE SHIPPING ADDRESS\nexport const saveShippingAddress = (data) => (dispatch) => {     // Pass in form data\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,    // when this is dispatch item with matching id will be removed\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))    // Passing in data\n}\n\n\n// SAVE CARD PAYMENT\nexport const savePaymentMethod = (data) => (dispatch) => {\n  // Pass in form data\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data, // when this is dispatch item with matching id will be removed\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data)); // Passing in data\n};\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1 // GET qty from url after adding item, if location.search exists split (split turns into an array, takes away anything from that character and behind away, then in console the number is shown in the second place so we need to grab second array item which is [1])\n  //console.log('qty:', qty)\n  \n  const dispatch = useDispatch()\n\n  const cart = useSelector(state => state.cart)   // Use the state to grab the items in the cart\n  const { cartItems } = cart    // Destructuring the items in cart\n  //console.log(cart) // Show what cart is grabbing\n\n  // Send info to state when adding items to cart\n  useEffect(() => {\n    if(productId){\n      dispatch(addToCart(productId, qty))   // Dispatch to addTocart which is in our productActions, which will then add our items to the localStorage\n    }\n  },[dispatch, productId, qty])\n\n\n  const removeFromCartHandler = (id) => {\n    //console.log('remove:', id)\n    dispatch(removeFromCart(id))  // Using removeFromCart from cartActions\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')  // Send to login page, if logged in redirect to shipping page\n  }\n\n    return (\n      <Row>\n        <Col md={8}>\n          <h1>Shopping Cart</h1>\n          {/* If there are no items in cart display message */}\n          {/* If there is an item/items destructure it key = item.product (product = id) */}\n          {cartItems.length === 0 ? (\n            <Message variant=\"info\">\n              Your cart is empty <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />{\" \"}\n                      {/* fluid makes it responsive */}\n                    </Col>\n\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n\n                    <Col md={2}>${item.price}</Col>\n\n                    {/* Item stock selector */}\n                    <Col md={3}>\n                      <Form.Control\n                        as=\"select\"\n                        value={item.qty}\n                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}    // When value is changed we to dispatch to addToCart, and that value is whatever we change it to e.target.value, (change to number for subtotal function)\n                      >\n                        {[...Array(item.countInStock).keys()].map((\n                          x // Created an array of how many products we have in stock\n                        ) => (\n                          <option key={x + 1} value={x + 1}>\n                            {/* After mapping through we add a buyable stock for every stock we have in the db */}\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n\n                    <Col md={1}>\n                      <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </Col>\n\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n\n        <Col md={4}>\n          <Card>\n\n            {/* Cart Total calculator */}\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                {/* map through cartItems using reduce, take in two params accumalator, and the item.   0 is the number we want to start from */}\n                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items </h2>\n                {/* Now get the total price, use .toFixed to set max amount of decimal places */}\n                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n              </ListGroup.Item>\n            </ListGroup>\n\n            {/* Checkout button */}\n            <ListGroup.Item>\n              <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    );\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6} >\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n\n    const [email, setEmail] = useState('')\n\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : \"/\"   // Separate redirect by the = symbol and grab whatever is after\n\n    const userLogin = useSelector(state => state.userLogin)     // Grabbing userLogin from the state, (found in store.js)\n    const { error, loading, userInfo } = userLogin    // Inside of userReducer we want to pull back the selected objects\n\n    // If user is logged in don't let them go to login screen redirect instead\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        //console.log('submitted')\n        dispatch(login(email, password))        // Will dispatch to userActions\n\n    }\n\n    return (\n      <FormContainer>\n        <h1>Sign In</h1>\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n                Sign In\n            </Button>\n\n        </Form>\n\n        <Row className=\"py-3\">\n            <Col>\n                New Customer? <Link \n                to={redirect ? `/register?redirect=${redirect}` : '/register'}>       {/*If we have redirect send user to register page, else send user to register page with no extra params*/}\n                    Register\n                    </Link>\n            </Col>\n        </Row>\n\n      </FormContainer>\n    );\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register } from \"../actions/userActions\";\n\nfunction RegisterScreen({ location, history }) {\n\n        const [name, setName] = useState(\"\");\n\n        const [email, setEmail] = useState(\"\");\n\n        const [password, setPassword] = useState(\"\");\n        const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n        const [message, setMessage] = useState(\"\");\n\n        const dispatch = useDispatch();\n\n        const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"; // Separate redirect by the = symbol and grab whatever is after\n\n        const userRegister = useSelector((state) => state.userLogin); // Grabbing userRegister from the state, (found in store.js)\n        const { error, loading, userInfo } = userRegister; // Inside of userReducer we want to pull back the selected objects\n\n        // If user is logged in don't let them go to login screen redirect instead\n        useEffect(() => {\n          if (userInfo) {\n            history.push(redirect);\n          }\n        }, [history, userInfo, redirect]);\n\n        const submitHandler = (e) => {\n          e.preventDefault();\n          // Warning prompt, if two password do not match, set custom message, if they do match dispatch\n          if (password !== confirmPassword) {\n            setMessage(\"Passwords do not match\");\n          } else {\n            dispatch(register(name, email, password)); // Will dispatch to userActions\n          }\n        };\n\n    return (\n      <FormContainer>\n        <h1>Sign In</h1>\n        {message && <Message variant=\"danger\">{message}</Message>}  {/* Message for passwords not matching */}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Register\n          </Button>\n        </Form>\n\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account?\n            <Link\n              to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\n            >\n              {/*If we have redirect send user to login page, else send user to login page with no extra params*/}\n              Sign In\n            </Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    );\n}\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n  const [name, setName] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector(state => state.userDetails); // Grabbing userDetails from the state, (found in store.js)\n  const { error, loading, user } = userDetails; // Inside of userReducer we want to pull back the selected objects\n\n  // Want to make sure user is logged in first\n  const userLogin = useSelector(state => state.userLogin); // Grabbing userLogin from the state, (found in store.js)\n  const { userInfo } = userLogin; // Inside of userReducer we want to pull back the selected objects\n\n  const userUpdateProfile = useSelector(state => state.userLogin); // Grabbing userLogin from the state, (found in store.js)\n  const { success } = userLogin; // Want to fire off the success message inside of userReducer\n\n  const orderListMy = useSelector(state => state.orderListMy); // Grabbing orderListMy from the state, (found in store.js)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy; // Want to fire off the success message inside of userReducer\n\n  // If the user is not logged in send them to login, if we do check if info has been loaded, if we don't have it we will dispatch it and once we get it we will set the state with it\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {    // userInfo._id don't match user._id fire off state and get new user info\n        dispatch({ type: USER_UPDATE_PROFILE_RESET }); // if success is true restart the State\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // Warning prompt, if two password do not match, set custom message, if they do match dispatch\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          // dispatching the user object from our updateUserProfile actionModel\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\"); // When successful setMessage will disappear\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}{\" \"}\n        {/* Message for passwords not matching */}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>   {/* substring to the 9th character and doesn't show anything after */}\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`} >\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen;\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_CREATE_REQUEST,\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.post(\n      // Want to destructure data right away\n      `/api/orders/add/`,\n      order, // Added the order parameter from the top\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({      // Clears cart state after successful order\n        type: CART_CLEAR_ITEMS,\n        payload: data,\n    });\n\n    localStorage.removeItem('cartItems')    // Clears cartItems from localStorage after successful order\n\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_CREATE_REQUEST,\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.get(\n      // Want to destructure data right away\n      `/api/orders/${id}/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_CREATE_REQUEST,\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.put(\n      // Want to destructure data right away\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_LIST_MY_REQUEST,\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.get(\n      // Want to destructure data right away\n      `/api/orders/myorders/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_LIST_MY_REQUEST,\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.get(\n      // Want to destructure data right away\n      `/api/orders/`,\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  // Take in order object that will gather the data and send the data to db\n  try {\n    // set ORDER_CREATE_REQUEST,\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo }, //We want to get data about the profile we are logged in as, userInfo is the state\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`, // Pass in the token from logged in user for authorization access\n      },\n    };\n\n    // make the put request,\n    const { data } = await axios.put(\n      // Want to destructure data right away\n      `/api/orders/${order._id}/deliver/`,\n      {},\n      config\n    );\n\n    // and if it is successful dispatch payload to the reducer\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail // If we received an error message\n          ? error.response.data.detail // Give the error message, from detail which is from the backend\n          : error.message, // If not display generic message\n    });\n  }\n};\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    return (\n      <Nav className=\"justify-content-center mb-4\">\n\n        {/* Create 4 step progress bar */}\n        <Nav.Item>\n          {step1 ? (\n            <LinkContainer to=\"/login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n          ) : (\n            <Nav.Link disabled>Login</Nav.Link>\n          )}\n        </Nav.Item>\n\n        <Nav.Item>\n          {step2 ? (\n            <LinkContainer to=\"/shipping\">\n              <Nav.Link>Shipping</Nav.Link>\n            </LinkContainer>\n          ) : (\n            <Nav.Link disabled>Shipping</Nav.Link>\n          )}\n        </Nav.Item>\n\n        <Nav.Item>\n          {step3 ? (\n            <LinkContainer to=\"/payment\">\n              <Nav.Link>Payment</Nav.Link>\n            </LinkContainer>\n          ) : (\n            <Nav.Link disabled>Payment</Nav.Link>\n          )}\n        </Nav.Item>\n\n        <Nav.Item>\n          {step4 ? (\n            <LinkContainer to=\"/placeorder\">\n              <Nav.Link>Place Order</Nav.Link>\n            </LinkContainer>\n          ) : (\n            <Nav.Link disabled>Place Order</Nav.Link>\n          )}\n        </Nav.Item>\n\n      </Nav>\n    );\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n  const cart = useSelector(state => state.cart)   // Using cart because shippingAddress is inside of cart in store.js\n  const { shippingAddress } = cart\n\n  const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city);\n    const [state, setState] = useState(shippingAddress.state);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        //console.log('Submitted')\n        dispatch(saveShippingAddress({ address, city, state, postalCode, country })) // When clicked dispatch to action and we are sending(payload) specific objects\n        history.push('/payment')  // When button is clicked redirect \n    }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />   {/* Pass in steps from CheckoutSteps as props to get links */}\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address ? address : \"\"} // if address exists fill it out, if not empty string\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city ? city : \"\"} // if city exists fill it out, if not empty string\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"state\">\n          <Form.Label>State</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter State\"\n            value={state ? state : \"\"} // if state exists fill it out, if not empty string\n            onChange={(e) => setState(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode ? postalCode : \"\"} // if postalCode exists fill it out, if not empty string\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country ? country : \"\"} // if country exists fill it out, if not empty string\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );}\n\nexport default ShippingScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector((state) => state.cart); // Using cart because shippingAddress is inside of cart in store.js\n    const { shippingAddress } = cart;\n\n    const dispatch = useDispatch();\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')    // can add more by making it an empty string and having user select it\n\n    if(!shippingAddress.address){\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))        // savePaymentMethod action, paymentMethod useState\n        history.push('/placeorder')\n    }\n\n\n  return (\n    <FormContainer>\n        <CheckoutSteps step1 step2 step3 />\n\n        <Form onSubmit={submitHandler}>\n            <Form.Group>\n                <Form.Label as=\"legend\" >Select Method</Form.Label>\n                <Col>\n                    <Form.Check\n                        type=\"radio\"\n                        label=\"PayPal or Credit Card\"\n                        id=\"paypal\"\n                        name=\"paymentMethod\"\n                        checked\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                    >\n\n                    </Form.Check>\n                </Col>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">Continue</Button>\n        </Form>\n\n    </FormContainer>\n  )}\n\nexport default PaymentScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n  const orderCreate = useSelector( state => state.orderCreate )   // Grab orderCreate from state and destructure actions\n  const{order, error, success} = orderCreate\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector(state => state.cart)\n\n  cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n  // If total is over $100 shipping is free, if not shipping is 10\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n\n  cart.taxPrice = ((0.07) * cart.itemsPrice).toFixed(2)\n\n  cart.totalPrice =\n    (Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)).toFixed(2)\n\n\n    if(!cart.paymentMethod){\n      history.push('/payment')\n    }\n\n\n    // On success after order send to users account to view the order\n    useEffect(() => {\n      if(success){\n        history.push(`/order/${order._id}`)\n        dispatch({ type: ORDER_CREATE_RESET })  // after redirect dispatch and reset state\n      }\n    }, [success, history])\n\n  const placeOrder = () => {\n      //console.log('place order')\n      dispatch(createOrder({      // Dispatch from cart state, and the states created for this screen above\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      }))\n  }\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      {/* one row two col layout */}\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},\n                {\"  \"}\n                {cart.shippingAddress.postalCode},{\"  \"}\n                {cart.shippingAddress.state},{\"  \"}\n                {cart.shippingAddress.country},\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>{\" \"}\n                          {/* Product is the id */}\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <ListGroup variant=\"flush\">\n\n            <ListGroup.Item>\n              <h2>Order Summary</h2>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Items:</Col>\n                <Col>${cart.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Shipping:</Col>\n                <Col>${cart.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Tax:</Col>\n                <Col>${cart.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Total:</Col>\n                <Col>${cart.totalPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              {error && <Message variant=\"danger\">{error}</Message>}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n                <Button\n                    type=\"button\"\n                    className=\"btn-block\"\n                    disabled={cart.cartItems === 0}\n                    onClick={placeOrder}\n                >\n                    Place Order\n                </Button>\n            </ListGroup.Item>\n\n          </ListGroup>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from \"../components/Message\";\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n  const orderId = match.params.id;\n\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector((state) => state.orderDetails); // Grab orderCreate from state and destructure actions\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay); // Grab orderCreate from state and destructure actions\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver); // Grab orderCreate from state and destructure actions\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin); // Grab orderCreate from state and destructure actions\n  const { userInfo } = userLogin;\n\n  if (!loading && !error) {\n    // only loaded if we have it\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n  // clientId payPal\n  // AcBG3ZtzTgvR-nEIRCzjHqFsn-hvD34mSsuO8R-IBHLGuQfS2fCBafdAc62WXjqKL_3UkozqzrQKrJoS\n\n  // Create HTML function to use smart paypal buttons\n  const addPayPalScript = () => {\n    const script = document.createElement('script')\n    script.type ='text/javascript'\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AcBG3ZtzTgvR-nEIRCzjHqFsn-hvD34mSsuO8R-IBHLGuQfS2fCBafdAc62WXjqKL_3UkozqzrQKrJoS\";\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)   // Append the script above to the body when it is don\n  }\n\n  // On success after order send to users account to view the order\n  useEffect(() => {\n\n    if(!userInfo){\n      history.push('/login')\n    }\n\n    if (!order || successPay || order._id !== Number(orderId) || successDeliver) {    // _id is how id is set in the backend\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      \n      dispatch(getOrderDetails(orderId));\n    }else if(!order.isPaid){\n      if(!window.paypal){   // if window doesn't have paypal display script\n        addPayPalScript()\n      }else{\n        setSdkReady(true)   // if it does set to true\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult))    // payOrder sends API call and update DB\n  }\n\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  // If loading show loader, if error display message error, if neither display order page\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order._id}</h1>\n      {/* one row two col layout */}\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Name: </strong>\n                <a href={`mailto:${order.user.email}`}>\n                  {order.user.email}\n                </a>{\" \"}\n                {/* a href link will pull up email */}\n              </p>\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},\n                {\"  \"}\n                {order.shippingAddress.postalCode},{\"  \"}\n                {order.shippingAddress.state},{\"  \"}\n                {order.shippingAddress.country},\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>{\" \"}\n                          {/* Product is the id */}\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {/* If order is not paid ouput button, if it is disable */}\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n            </ListGroup>\n\n            {/* userInfo has to be admin and order has to be paid and delivered has to be false */}\n            {loadingDeliver && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const {loading, error, users} = userList\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userDelete = useSelector(state => state.userDelete);\n    const { success: successDelete } = userDelete;\n\n    useEffect(() => {\n      // PROTECT ADMIN ROUTES\n      if (userInfo && userInfo.isAdmin) {\n        dispatch(listUsers());\n      } else {\n        history.push(\"/login\");\n      }\n    }, [dispatch, history, successDelete, userInfo]);\n\n    const deleteHandler = (id) => {\n      // Prevent accidental deletion with confirmation before deletion\n      if(window.confirm('Are you sure you want to delete this user?')){\n        dispatch(deleteUser(id))\n      }\n      //console.log('Delete', id)\n    }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Admin</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {/* Is user admin or not */}\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {/* Edit or delete user */}\n\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails); // Grabbing userRegister from the state, (found in store.js)\n  const { error, loading, user } = userDetails; // Inside of userReducer we want to pull back the selected objects\n\n  const userUpdate = useSelector((state) => state.userUpdate); // Grabbing userUpdate from the state, (found in store.js)\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate; // Inside of userUpdate we want to pull back the selected objects\n\n  // If user is logged in don't let them go to login screen redirect instead\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      // Change to number to match other id or else it will create infinite loop\n      if (!user.name || user._id !== Number(userId)) {\n        // if user.name or user.id does not match userId(passed in from match) dispatch update\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/userlist/\">Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message varinat=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Label>Is Admin</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                placeholder=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)} // Not value checked for checkbox\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })  // Clear state\n\n    // PROTECT ADMIN ROUTES\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if(successCreate){\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    }else{\n      dispatch(listProducts(keyword))\n    }\n\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword]);   // Add in success delete so when something is deleted page will refresh\n\n  const deleteHandler = (id) => {\n    // Prevent accidental deletion with confirmation before deletion\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n        dispatch(deleteProduct(id))\n    }\n  };\n\n  const createProductHandler = () => {\n      // Create product\n    dispatch(createProduct())\n  }\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Category</th>\n                <th>Brand</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n\n                  <td>\n                    {/* Edit or delete products */}\n\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nfunction ProductEditScreen({ match, history }) {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails); // Grabbing userRegister from the state, (found in store.js)\n  const { error, loading, product } = productDetails; // Inside of userReducer we want to pull back the selected objects\n\n  const productUpdate = useSelector((state) => state.productUpdate); // Grabbing userRegister from the state, (found in store.js)\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate; // Inside of userReducer we want to pull back the selected objects\n\n  useEffect(() => {\n\n    if(successUpdate){\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    }else{\n    // Change to number to match other id or else it will create infinite loop\n    if (!product.name || product._id !== Number(productId)) {\n      // if user.name or user.id does not match userId(passed in from match) dispatch update\n      dispatch(listProductDetails(productId));\n    } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name, \n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description,      \n    }))\n  };\n\n  const uploadFileHandler = async (e) => {\n    //console.log('File is uploading')\n    const file = e.target.files[0]\n    const formData = new FormData()\n\n    formData.append('image', file)              // Files and id we are sending to the db\n    formData.append('product_id', productId)\n\n    setUploading(true)\n\n    try{\n      const config = {\n        headers: {\n          'Content-Type':'mulitpart/form-data'  // Allows us to send image data with post req\n        }\n      }\n      // Axios request to send image, data, and config to give configuration\n      const {data} = await axios.post('/api/products/upload/', formData, config)\n\n      setImage(data)\n      setUploading(false)\n\n    }catch(error){\n      setUploading(false)\n    }\n  }\n\n  return (\n    <div>\n      <Link to=\"/admin/productlist/\">Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader/>}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              >\n              </Form.File>\n              {uploading && <Loader/>}\n\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countinstock\">\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default ProductEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\nfunction OrderListScreen({ history }) {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    // PROTECT ADMIN ROUTES\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>User</th>\n              <th>Date</th>\n              <th>Total</th>\n              <th>Paid</th>\n              <th>Delievered</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {/* Was order paid? */}\n                  {order.isPaid ? (\n                    order.paidAt.substring(0,10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                {/* Was order delievered? */}\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0,10)\n                  ) : (\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {/* Edit or delete user */}\n\n                  <LinkContainer to={`/order/${order._id}/`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                        Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default OrderListScreen;\n","import { Container  } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen' \nimport CartScreen from './screens/CartScreen' \nimport LoginScreen from './screens/LoginScreen' \nimport RegisterScreen from './screens/RegisterScreen' \nimport ProfileScreen from './screens/ProfileScreen' \nimport ShippingScreen from './screens/ShippingScreen' \nimport PaymentScreen from './screens/PaymentScreen' \nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\"; \nimport OrderScreen from \"./screens/OrderScreen\"; \nimport UserListScreen from \"./screens/UserListScreen\"; \nimport UserEditScreen from \"./screens/UserEditScreen\"; \nimport ProductListScreen from \"./screens/ProductListScreen\"; \nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";  \n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" exact component={HomeScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          {/* id comes from the url parameter set in OrderScreen.js */}\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          {/* ? after id makes it optional */}\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nimport './index.css';\nimport './bootstrap.min.css'  // Bootstrap file\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}